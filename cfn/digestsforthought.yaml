
# Used https://github.com/awslabs/aws-cidr-finder/blob/master/cfn/cidr-findr.yaml
# as an example to get started.

Parameters:
  S3Bucket:
    Description: Bucket that stores the template assets
    Type: String
  FunctionName:
    Description: Name of the lambda function
    Type: String

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: ["sts:AssumeRole"]
      Path: "/service-role/"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref FunctionName
      Description: Twitter digests via e-mail
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: digestsforthought.zip
      Handler: digestsforthought.handler
      Role: !GetAtt [LambdaRole, Arn]
      Runtime: python3.9
      Timeout: 60

  # Based on example from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: !Ref FunctionName
      Description: "Twitter digests daily"
      ScheduleExpression: "cron(0 5 ? * * *)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "LambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"

Outputs:
  FunctionArn:
    Value: !GetAtt [LambdaFunction, Arn]
    Export:
      Name: !Ref FunctionName

